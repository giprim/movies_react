{"ast":null,"code":"var _jsxFileName = \"/home/gi/NODEWORKSPACE/movies_react/movies/src/components/Search.js\";\nimport React, { useState, useEffect, createContext } from 'react';\nimport Axios from 'axios';\nimport Navbar from './Navbar';\nconst SearchContext = createContext();\n\nfunction SearchComponent(props) {\n  const [inputValue, setInputValue] = useState('');\n  const [searchResult, setSearchResult] = useState([]);\n\n  const handleSearchInput = e => {\n    e.persist();\n    let inputValue = e.target.value;\n    setInputValue(inputValue);\n  };\n\n  const handleSearchSubmit = e => {\n    e.preventDefault();\n    makeRequest(inputValue);\n    console.log(props.history);\n  };\n\n  const makeRequest = searchFor => {\n    let search = {\n      method: 'GET',\n      url: `https://imdb-internet-movie-database-unofficial.p.rapidapi.com/search/${searchFor}`,\n      headers: {\n        'content-type': 'application/octet-stream',\n        'x-rapidapi-host': 'imdb-internet-movie-database-unofficial.p.rapidapi.com',\n        'x-rapidapi-key': '1928aa76c3msh12d0543b8640813p1b3c8cjsneb28e6b3b6ed'\n      }\n    };\n    Axios(search).then(res => setSearchResult(res.data)).catch(err => console.error(err));\n  };\n\n  let variable = 'passed data';\n  return React.createElement(React.Fragment, null, React.createElement(SearchContext.Provider, {\n    value: {\n      searchResult,\n      variable,\n      handleSearchSubmit,\n      handleSearchInput\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, props.children));\n}\n\nexport { SearchContext };\nexport default SearchComponent;","map":{"version":3,"sources":["/home/gi/NODEWORKSPACE/movies_react/movies/src/components/Search.js"],"names":["React","useState","useEffect","createContext","Axios","Navbar","SearchContext","SearchComponent","props","inputValue","setInputValue","searchResult","setSearchResult","handleSearchInput","e","persist","target","value","handleSearchSubmit","preventDefault","makeRequest","console","log","history","searchFor","search","method","url","headers","then","res","data","catch","err","error","variable","children"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,aAArC,QAA0D,OAA1D;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,MAAMC,aAAa,GAAGH,aAAa,EAAnC;;AAEA,SAASI,eAAT,CAAyBC,KAAzB,EAAgC;AAC/B,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BT,QAAQ,CAAC,EAAD,CAA5C;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,EAAD,CAAhD;;AAEA,QAAMY,iBAAiB,GAAGC,CAAC,IAAI;AAC9BA,IAAAA,CAAC,CAACC,OAAF;AACA,QAAIN,UAAU,GAAGK,CAAC,CAACE,MAAF,CAASC,KAA1B;AACAP,IAAAA,aAAa,CAACD,UAAD,CAAb;AACA,GAJD;;AAMA,QAAMS,kBAAkB,GAAGJ,CAAC,IAAI;AAC/BA,IAAAA,CAAC,CAACK,cAAF;AACAC,IAAAA,WAAW,CAACX,UAAD,CAAX;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAYd,KAAK,CAACe,OAAlB;AACA,GAJD;;AAMA,QAAMH,WAAW,GAAGI,SAAS,IAAI;AAChC,QAAIC,MAAM,GAAG;AACZC,MAAAA,MAAM,EAAE,KADI;AAEZC,MAAAA,GAAG,EAAG,yEAAwEH,SAAU,EAF5E;AAGZI,MAAAA,OAAO,EAAE;AACR,wBAAgB,0BADR;AAER,2BACC,wDAHO;AAIR,0BAAkB;AAJV;AAHG,KAAb;AAUAxB,IAAAA,KAAK,CAACqB,MAAD,CAAL,CACEI,IADF,CACOC,GAAG,IAAIlB,eAAe,CAACkB,GAAG,CAACC,IAAL,CAD7B,EAEEC,KAFF,CAEQC,GAAG,IAAIZ,OAAO,CAACa,KAAR,CAAcD,GAAd,CAFf;AAGA,GAdD;;AAgBA,MAAIE,QAAQ,GAAG,aAAf;AAEA,SACC,0CACC,oBAAC,aAAD,CAAe,QAAf;AACC,IAAA,KAAK,EAAE;AACNxB,MAAAA,YADM;AAENwB,MAAAA,QAFM;AAGNjB,MAAAA,kBAHM;AAINL,MAAAA;AAJM,KADR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOEL,KAAK,CAAC4B,QAPR,CADD,CADD;AAaA;;AACD,SAAS9B,aAAT;AACA,eAAeC,eAAf","sourcesContent":["import React, { useState, useEffect, createContext } from 'react';\nimport Axios from 'axios';\n\nimport Navbar from './Navbar';\n\nconst SearchContext = createContext();\n\nfunction SearchComponent(props) {\n\tconst [inputValue, setInputValue] = useState('');\n\tconst [searchResult, setSearchResult] = useState([]);\n\n\tconst handleSearchInput = e => {\n\t\te.persist();\n\t\tlet inputValue = e.target.value;\n\t\tsetInputValue(inputValue);\n\t};\n\n\tconst handleSearchSubmit = e => {\n\t\te.preventDefault();\n\t\tmakeRequest(inputValue);\n\t\tconsole.log(props.history);\n\t};\n\n\tconst makeRequest = searchFor => {\n\t\tlet search = {\n\t\t\tmethod: 'GET',\n\t\t\turl: `https://imdb-internet-movie-database-unofficial.p.rapidapi.com/search/${searchFor}`,\n\t\t\theaders: {\n\t\t\t\t'content-type': 'application/octet-stream',\n\t\t\t\t'x-rapidapi-host':\n\t\t\t\t\t'imdb-internet-movie-database-unofficial.p.rapidapi.com',\n\t\t\t\t'x-rapidapi-key': '1928aa76c3msh12d0543b8640813p1b3c8cjsneb28e6b3b6ed'\n\t\t\t}\n\t\t};\n\t\tAxios(search)\n\t\t\t.then(res => setSearchResult(res.data))\n\t\t\t.catch(err => console.error(err));\n\t};\n\n\tlet variable = 'passed data';\n\n\treturn (\n\t\t<>\n\t\t\t<SearchContext.Provider\n\t\t\t\tvalue={{\n\t\t\t\t\tsearchResult,\n\t\t\t\t\tvariable,\n\t\t\t\t\thandleSearchSubmit,\n\t\t\t\t\thandleSearchInput\n\t\t\t\t}}>\n\t\t\t\t{props.children}\n\t\t\t</SearchContext.Provider>\n\t\t</>\n\t);\n}\nexport { SearchContext };\nexport default SearchComponent;\n"]},"metadata":{},"sourceType":"module"}